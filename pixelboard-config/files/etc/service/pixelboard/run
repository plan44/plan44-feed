#!/bin/sh

# default features
EXECUTABLE=pixelboardd
LOGLEVEL=5
EXTRAOPTS=
MESSAGE=

# resources (images, sounds)
RESOURCEPATH="/usr/share/pixelboard"

# platform params (Omega2, v3 board)
PLATFORM_LEDCHAIN_DEVICE="/dev/ledchain1"
PLATFORM_LEDCHAIN_NUMLEDS="200"

# ALSA sound (note we need our own .asoundrc for that)
PLATFORM_SOUND_DEVICE="sound"
PLATFORM_MUSIC_DEVICE="music"
DEFAULT_SOUND_VOLUME="100"
DEFAULT_MUSIC_VOLUME="60"

# init sound
alsactl init
# - make sure controls exist
aplay -D "${PLATFORM_SOUND_DEVICE}" "${RESOURCEPATH}/sounds/silence.wav"
aplay -D "${PLATFORM_MUSIC_DEVICE}" "${RESOURCEPATH}/sounds/silence.wav"

# Allow overriding options
# - override from flash
if [ -e /flash/pixelboardd_debug ]; then
  source /flash/pixelboardd_debug
fi
# - override from tmp
if [ -e /tmp/pixelboardd_debug ]; then
  source /tmp/pixelboardd_debug
fi

# switch off the Omega2 LED
echo 0 >/sys/class/leds/omega2\:amber\:system/brightness

# load the LED chain kernel module
# - Omega2 with non-inverted WS2813 LEDs at GPIO46/PWM1
devmem 0x1000003C 32 0x00FE01FF
omega2-ctrl gpiomux set uart1 pwm01
insmod p44-ledchain ledchain1=0,${PLATFORM_LEDCHAIN_NUMLEDS},2

# configure GPIOs for i2c switch, reset, change sense for touch boards
# - switch hardware i2c pins to gpio
omega2-ctrl gpiomux set i2c gpio
omega2-ctrl gpiomux set spi_s gpio
# - use two software i2c, one for each side (hardware i2c is too fast for the long wires anyway)
# bus<Y>=<id>,<sda>,<scl>,<udelay>,<timeout>,<sda_od>,<scl_od>,<scl_oo>
insmod i2c-gpio-custom bus1=1,5,4,100,10,0,0,1 bus2=2,16,17,100,10,0,0,1

# GPIO6 is SPI_CS1 by default, switch to GPIO
omega2-ctrl gpiomux set spi_cs1 gpio
# GPIO15 = /TOUCH_RST (0=Reset, 1=run)
# GPIO19 = /TOUCH_CHG (0=change detected)
echo 15 >/sys/class/gpio/export
echo 19 >/sys/class/gpio/export
# keep reset
echo out >/sys/class/gpio/gpio15/direction
echo 0 >/sys/class/gpio/gpio15/value
# release reset
echo 1 >/sys/class/gpio/gpio15/value

for SIDE in 1 2; do
  # configure key LEDs
  # - turn off LEDs (active LOW) - OLATA
  i2cset -y $SIDE 0x20 0x14 0x1E
  # - make GPA1..4 outputs (clear bits in IODIRA)
  i2cset -y $SIDE 0x20 0x00 0xE1
  # - turn LEDs on during calibration
  i2cset -y $SIDE 0x20 0x14 0x00
  # configure touch
  # - disable keys 5 and 6 (Averaging factor 0)
  i2cset -y $SIDE 0x1B 44 0
  i2cset -y $SIDE 0x1B 45 0
  # - disable adjacent key group (Bits 0..2, by default, all keys are in group 1, 0=none)
  #   and set averaging factor (Bits 3..7, by default==8)
  i2cset -y $SIDE 0x1B 39 0x40
  i2cset -y $SIDE 0x1B 40 0x20
  i2cset -y $SIDE 0x1B 41 0x20
  i2cset -y $SIDE 0x1B 42 0x20
  i2cset -y $SIDE 0x1B 43 0x20
  # - lower threshold, default = 20
  i2cset -y $SIDE 0x1B 32 7
  i2cset -y $SIDE 0x1B 33 10
  i2cset -y $SIDE 0x1B 34 10
  i2cset -y $SIDE 0x1B 35 10
  i2cset -y $SIDE 0x1B 36 10
  # - integrators, default = 4
  i2cset -y $SIDE 0x1B 46 2
  i2cset -y $SIDE 0x1B 47 5
  i2cset -y $SIDE 0x1B 48 5
  i2cset -y $SIDE 0x1B 49 5
  i2cset -y $SIDE 0x1B 50 5
  # disable guard channel
  # - averaging factor 0 = disabled
  i2cset -y $SIDE 0x1B 39 0
  # - normally 0, 8=invalid guard channel=off
  i2cset -y $SIDE 0x1B 53 8
  # recalibrate (with LEDs on)
  i2cset -y $SIDE 0x1B 56 1
done

# run the daemon
exec ${EXECUTABLE} \
  --i2cbuslow 1 \
  --i2cbushigh 2 \
  --touchreset "gpio.15" \
  --touchdetect "/gpio.19" \
  --ledchain "${PLATFORM_LEDCHAIN_DEVICE}" \
  --sound "${PLATFORM_SOUND_DEVICE}" \
  --soundvol "${DEFAULT_SOUND_VOLUME}" \
  --music "${PLATFORM_MUSIC_DEVICE}" \
  --musicvol "${DEFAULT_MUSIC_VOLUME}" \
  --jsonapiport 8090 \
  --defaultpage display \
  --defaultmode 1 \
  --image ${RESOURCEPATH}/images/default.png \
  --message "${MESSAGE}" \
  --resourcepath "${RESOURCEPATH}" \
  -l ${LOGLEVEL} \
  ${EXTRAOPTS} \
  </dev/null
