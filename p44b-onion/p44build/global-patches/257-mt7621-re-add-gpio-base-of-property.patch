--- /dev/null
+++ b/target/linux/ramips/patches-6.6/399-mt7621-re-add-gpio-base-of-property.patch
@@ -0,0 +1,52 @@
+--- a/drivers/gpio/gpio-mt7621.c
++++ b/drivers/gpio/gpio-mt7621.c
+@@ -218,7 +218,7 @@ static const struct irq_chip mt7621_irq_
+ };
+ 
+ static int
+-mediatek_gpio_bank_probe(struct device *dev, int bank)
++mediatek_gpio_bank_probe(struct device *dev, int bank, int base)
+ {
+ 	struct mtk *mtk = dev_get_drvdata(dev);
+ 	struct mtk_gc *rg;
+@@ -243,6 +243,7 @@ mediatek_gpio_bank_probe(struct device *
+ 		return ret;
+ 	}
+ 
++	rg->chip.base = base;
+ 	rg->chip.of_gpio_n_cells = 2;
+ 	rg->chip.of_xlate = mediatek_gpio_xlate;
+ 	rg->chip.label = devm_kasprintf(dev, GFP_KERNEL, "%s-bank%d",
+@@ -289,7 +290,7 @@ mediatek_gpio_bank_probe(struct device *
+ 	/* set polarity to low for all gpios */
+ 	mtk_gpio_w32(rg, GPIO_REG_POL, 0);
+ 
+-	dev_info(dev, "registering %d gpios\n", rg->chip.ngpio);
++	dev_info(dev, "registering %d gpios in bank %d with base %d%s\n", rg->chip.ngpio, bank, base, base<0 ? " (automatic)" : "");
+ 
+ 	return 0;
+ }
+@@ -298,8 +299,10 @@ static int
+ mediatek_gpio_probe(struct platform_device *pdev)
+ {
+ 	struct device *dev = &pdev->dev;
++	struct device_node *np = dev->of_node;
+ 	struct mtk *mtk;
+ 	int i;
++	u32 base;
+ 	int ret;
+ 
+ 	mtk = devm_kzalloc(dev, sizeof(*mtk), GFP_KERNEL);
+@@ -317,8 +320,11 @@ mediatek_gpio_probe(struct platform_devi
+ 	mtk->dev = dev;
+ 	platform_set_drvdata(pdev, mtk);
+ 
++	base = (u32)(-1); /* automatic by default */
++	of_property_read_u32(np, "gpio-base", &base); /* but support setting base in DT */
++
+ 	for (i = 0; i < MTK_BANK_CNT; i++) {
+-		ret = mediatek_gpio_bank_probe(dev, i);
++		ret = mediatek_gpio_bank_probe(dev, i, ((int)base)<0 ? -1 : base+32*i);
+ 		if (ret)
+ 			return ret;
+ 	}
